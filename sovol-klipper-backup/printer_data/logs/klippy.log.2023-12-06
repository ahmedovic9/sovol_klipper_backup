=============== Log rollover at Wed Dec  6 10:17:08 2023 ===============
Starting Klippy...
Args: ['/home/klipper/klipper/klippy/klippy.py', '/home/klipper/printer_data/config/printer.cfg', '-I', '/home/klipper/printer_data/comms/klippy.serial', '-l', '/home/klipper/printer_data/logs/klippy.log', '-a', '/home/klipper/printer_data/comms/klippy.sock']
Git version: 'v0.11.0-277-g21b78429'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ARMv7 Processor rev 5 (v7l)
Python: '3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]'
Start printer at Wed Dec  6 10:17:12 2023 (1701847032.3 20.2)
===== Config file =====
[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	TURN_OFF_HEATERS
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
variable_restore_idle_timeout = 0
gcode = 
	
	{% set x = params.X|default(230) %}
	{% set y = params.Y|default(230) %}
	{% set z = params.Z|default(10)|float %}
	{% set e = params.E|default(1) %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% set lift_z = z|abs %}
	{% if act_z < (max_z - lift_z) %}
	{% set z_safe = lift_z %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	PAUSE_BASE
	G91
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{e} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe}
	G90
	G1 X{x} Y{y} F6000
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
gcode = 
	
	{% set e = params.E|default(1) %}
	
	{% if 'VELOCITY' in params|upper %}
	{% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
	{%else %}
	{% set get_params = "" %}
	{% endif %}
	
	G91
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E{e} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESUME_BASE {get_params}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Extruder not hot enough'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro START_PRINT]
gcode = 
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
	M140 S{BED_TEMP}
	M140 S{EXTRUDER_TEMP}
	
	M190 S{BED_TEMP}
	M109 S{EXTRUDER_TEMP}
	
	G28
	BED_MESH_PROFILE LOAD=default
	
	G1 Z2.0 F3000
	G1 X0.1 Y5 Z0.28 F5000.0
	
	
	G92 E0
	
	
	
	
	
	
	
	
	
	G1 Z0.5 F3000
	M117 Godmode is enabled

[gcode_macro END_PRINT]
variable_machine_depth = 235
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	
	G1 Z1 E-2 F2400
	
	G1 X5 Y5 F3000
	
	G1 Z5
	
	G28 X
	
	G90
	
	
	
	M84
	
	M117 That's All Folks

[mcu]
serial = /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00

[stepper_x]
step_pin = PB13
dir_pin = !PB12
enable_pin = !PB14
microsteps = 16
rotation_distance = 40
endstop_pin = tmc2209_stepper_x:virtual_endstop
position_endstop = 0
position_max = 300
homing_speed = 50
homing_retract_dist = 1
second_homing_speed = 20

[tmc2209 stepper_x]
uart_pin = PC11
tx_pin = PC10
diag_pin = ^PC0
uart_address = 0
run_current = 0.580
hold_current = 0.500
stealthchop_threshold = 250
driver_sgthrs = 110

[stepper_y]
step_pin = PB10
dir_pin = !PB2
enable_pin = !PB11
microsteps = 16
rotation_distance = 40
endstop_pin = tmc2209_stepper_y:virtual_endstop
position_endstop = 0
position_max = 250
homing_speed = 50
homing_retract_dist = 1
second_homing_speed = 20

[tmc2209 stepper_y]
uart_pin = PC11
tx_pin = PC10
diag_pin = ^PC1
uart_address = 2
run_current = 0.580
hold_current = 0.500
stealthchop_threshold = 250
driver_sgthrs = 110

[stepper_z]
step_pin = PB0
dir_pin = PC5
enable_pin = !PB1
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_max = 300
homing_retract_dist = 5
homing_speed = 15
second_homing_speed = 2
position_min = -4

[tmc2209 stepper_z]
uart_pin = PC11
tx_pin = PC10
uart_address = 1
run_current = 0.580
hold_current = 0.500

[extruder]
step_pin = PB3
dir_pin = PB4
enable_pin = !PD1
microsteps = 16
rotation_distance = 7.680
nozzle_diameter = 0.600
filament_diameter = 1.750
heater_pin = PC8
sensor_type = ATC Semitec 104GT-2
sensor_pin = PA0
control = pid
pid_kp = 21.527
pid_ki = 1.063
pid_kd = 108.982
min_temp = 0
max_temp = 240
pressure_advance = 0.1

[tmc2209 extruder]
uart_pin = PC11
tx_pin = PC10
uart_address = 3
run_current = 0.650
stealthchop_threshold = 999999

[heater_bed]
heater_pin = PC9
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC4
control = pid
pid_kp = 54.027
pid_ki = 0.770
pid_kd = 948.182
min_temp = 0
max_temp = 100

[heater_fan nozzle_cooling_fan]
pin = PC7

[heater_fan controller_fan]
pin = PB15

[fan]
pin = PC6

[printer]
kinematics = cartesian
max_velocity = 80
max_accel = 3000
max_z_velocity = 3
max_z_accel = 80
square_corner_velocity = 2.5

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 44.6
shaper_type_y = mzv
shaper_freq_y = 28.8

[bltouch]
sensor_pin = ^PC14
control_pin = PA1
x_offset = -34.5
y_offset = -3.5
samples = 3
z_offset = 0.685

[safe_z_home]
home_xy_position = 150,125
speed = 50
z_hop = 10
z_hop_speed = 5

[bed_mesh]
speed = 150
horizontal_move_z = 5
mesh_min = 38,35
mesh_max = 242,214
probe_count = 9,9
algorithm = bicubic
mesh_pps = 0
fade_start = 1
fade_end = 10
fade_target = 0

[board_pins]
aliases = 
	
	EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
	EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[display]
lcd_type = st7920
cs_pin = EXP1_7
sclk_pin = EXP1_6
sid_pin = EXP1_8
encoder_pins = ^EXP1_5, ^EXP1_3
click_pin = ^!EXP1_2

[output_pin beeper]
pin = EXP1_1

[bed_mesh default]
version = 1
points = 
	0.112500, 0.071667, 0.055833, 0.015833, 0.003333, -0.011667, -0.035000, -0.034167, -0.035000
	0.115833, 0.078333, 0.059167, 0.026667, 0.007500, -0.004167, -0.028333, -0.028333, -0.029167
	0.111667, 0.078333, 0.057500, 0.031667, 0.020000, 0.013333, -0.010833, -0.007500, -0.003333
	0.134167, 0.098333, 0.070833, 0.042500, 0.025000, 0.020000, -0.010000, -0.008333, -0.008333
	0.137500, 0.101667, 0.070833, 0.037500, 0.025000, 0.017500, -0.011667, -0.006667, -0.005000
	0.139167, 0.101667, 0.070000, 0.036667, 0.019167, 0.006667, -0.015833, -0.016667, -0.011667
	0.148333, 0.107500, 0.073333, 0.039167, 0.019167, 0.015000, -0.018333, -0.010833, -0.009167
	0.161667, 0.119167, 0.084167, 0.046667, 0.028333, 0.020833, -0.008333, -0.007500, -0.004167
	0.165000, 0.118333, 0.086667, 0.041667, 0.028333, -0.165833, -0.171667, -0.010000, -0.010833
x_count = 9
y_count = 9
mesh_x_pps = 0
mesh_y_pps = 0
algo = bicubic
tension = 0.2
min_x = 38.0
max_x = 242.0
min_y = 35.0
max_y = 213.96
=======================
Extruder max_extrude_ratio=0.598682
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
webhooks client 3037425136: New connection
webhooks client 3037425136: Client info {'program': 'Moonraker', 'version': 'v0.8.0-142-gee62d07'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_220032000250415339373620-if00'
MCU error during connect
Traceback (most recent call last):
  File "/home/klipper/klipper/klippy/mcu.py", line 800, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/klipper/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/klipper/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/klipper/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/klipper/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/klipper/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/klipper/klipper/klippy/mcu.py", line 805, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
No build file /home/klipper/klipper/klippy/../.config
No build file /home/klipper/klipper/klippy/../out/klipper.dict
No build file /home/klipper/klipper/klippy/../out/klipper.elf
